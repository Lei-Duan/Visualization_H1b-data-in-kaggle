options(scipen = 10000)
# Add line break in EMPLOYER_NAME to avoid messy looking in plot
levels(h1b$EMPLOYER_NAME) <- gsub(" ", "\n", levels(h1b$EMPLOYER_NAME))
## Split WORKSITE in to city and state
h1b <- separate(h1b,WORKSITE, into = c("subregion","region"), sep=",")
?tolower
View(h1b)
## Split WORKSITE in to city and state
h1b <- separate(h1b,WORKSITE, into = c("subregion","region"), sep=",") %>%
tolower(.["region"])
library(readxl)
library(ggplot2)
library(tidyverse)
library(OIdata)
library(ggmap)
# load dataset
h1b <- read.csv("h1b_kaggle.csv")
# View dataset
glimpse(h1b)
# Determine No. of NAs
sum(is.na(h1b)) # 232,426 NAs in total
# get R to display unscientific notation in ggplot
options(scipen = 10000)
# Add line break in EMPLOYER_NAME to avoid messy looking in plot
levels(h1b$EMPLOYER_NAME) <- gsub(" ", "\n", levels(h1b$EMPLOYER_NAME))
## Split WORKSITE in to city and state
h1b <- separate(h1b,WORKSITE, into = c("subregion","region"), sep=",") %>%
tolower(.["region"])
## Split WORKSITE in to city and state
h1b <- separate(h1b,WORKSITE, into = c("subregion","region"), sep=",")
tolower(h1b$region)
h1b$region <- tolower(h1b$region)
h1b_count <- h1b  %>%
group_by(EMPLOYER_NAME) %>%
mutate(count = n())
View(h1b_count)
h1b_count_region <- hib %>%
group_by(region) %>%
summarize(count = n())
h1b_count_region <- h1b %>%
group_by(region) %>%
summarize(count = n())
View(h1b_count_region)
View(h1b_count_region)
h1b_count_region <- h1b %>%
group_by(region) %>%
summarize(count = n()) %>%
inner_join(map_data("county"),by = "region")
map_data("county")
h1b_count_region <- h1b %>%
group_by(region) %>%
summarize(count = n())
View(h1b_count_region)
class(map_data("county"))
h1b_regionmap <- h1b_count_region %>%
inner_join(map_data("county"),by = "region")
View(h1b_regionmap)
View(h1b_count_region)
h1b_count_region
map_data("country")$region[1]
map_data("county")$region[1]
h1b_count_region$region[1]
h1b$region <- tolower(h1b$region) %>% gsub(" ","")
h1b$region <- tolower(h1b$region) %>% gsub(pattern=" ",replacement="")
h1b_count_region <- h1b %>%
group_by(region) %>%
summarize(count = n())
h1b_count_region$region[1]
library(stringr)
h1b$region <- tolower(h1b$region) %>% str_trim()
View(h1b)
library(readxl)
library(ggplot2)
library(tidyverse)
library(OIdata)
library(ggmap)
library(stringr)
# load dataset
h1b <- read.csv("h1b_kaggle.csv")
# View dataset
glimpse(h1b)
# Determine No. of NAs
sum(is.na(h1b)) # 232,426 NAs in total
# get R to display unscientific notation in ggplot
options(scipen = 10000)
# Add line break in EMPLOYER_NAME to avoid messy looking in plot
levels(h1b$EMPLOYER_NAME) <- gsub(" ", "\n", levels(h1b$EMPLOYER_NAME))
## Split WORKSITE in to city and state
h1b <- separate(h1b,WORKSITE, into = c("subregion","region"), sep=",")
h1b$region <- tolower(h1b$region) %>% str_trim()
View(h1b)
h1b_count_region <- h1b %>%
group_by(region) %>%
summarize(count = n())
h1b_regionmap <- h1b_count_region %>%
inner_join(map_data("county"),by = "region")
View(h1b)
h1b$subregion <- tolower(h1b$subregion) %>% str_trim()
h1b_count_subregion <- h1b %>%
group_by(subregion) %>%
summarize(count = n())
h1b_subregionmap <- h1b_count_subregion %>%
inner_join(map_data("county"),by = "subregion")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = T, option = "magma",name="H1b") +
theme_void()
library(viridis)
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = T, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = T, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(continuous = T, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_continuous(continuous = T, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_continuous(name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = T, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
# scale_fill_viridis(discrete = T, option = "magma",name="H1b") +
theme_void()
map_data("county")
View(h1b_count_subregion)
View(h1b)
h1b_count_subregion <- h1b %>%
group_by(subregion) %>%
summarize(count = n())
View(h1b_count_region)
h1b_count_subregion <- h1b %>%
group_by(subregion) %>%
summarize(count = n()) %>%
mutate(ntile(count,5))
View(h1b_count_subregion)
h1b_count_subregion <- h1b %>%
group_by(subregion) %>%
summarize(count = n()) %>%
mutate(count_range = ntile(count,5))
h1b_subregionmap <- h1b_count_subregion %>%
inner_join(map_data("county"),by = "subregion")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = T, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F, option = "magma",name="H1b") +
theme_void()
?map_data
map_data("city"ï¼‰
map_data("city")
map_data("state")
h1b_count_region <- h1b %>%
group_by(region) %>%
summarize(count = n()) %>%
mutate(count_range = ntile(count,20))
h1b_subregionmap <- h1b_count_subregion %>%
inner_join(map_data("state"),by = "region")
h1b_subregionmap <- h1b_count_region %>%
inner_join(map_data("state"),by = "region")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b") +
theme_void()
?scale_fill_viridis
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F, option = "D",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F, option = "magma",name="H1b") +
theme_void()
?scale_fill_viridis
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range))
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F, option = "magma",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F, option = "A",name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b") +
theme_void()
# scale_fill_viridis(discrete = F,name="H1b") +
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
# scale_fill_viridis(discrete = F,name="H1b") +
theme_void()
?scale_fill_viridis
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = T,name="H1b") +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b") +
theme_void()
?scale_fill_viridis
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",begin = 0, end = 1) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",begin = 1, end = 0) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",options = "D",begin = 1, end = 0) +
theme_void()
?scale_fill_viridis
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "D",begin = 1, end = 0) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "D",begin = 1, end = 0) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "magma",begin = 1, end = 0) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "magma",begin = 1, end = 0.3) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "magma",begin = 1, end = 0.2) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "green",begin = 1, end = 0.2) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "tree",begin = 1, end = 0.2) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "rainbow",begin = 1, end = 0.2) +
theme_void()
?option
?scale_fill_viridis()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.2) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "C",begin = 1, end = 0.2) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "D",begin = 1, end = 0.2) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "DB",begin = 1, end = 0.2) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.2) +
theme_void()
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.2) +
theme_void() +labs(title = "Drug Overdose Deaths in the US",
subtitle = "County Level Data, 1999-2015",
caption = "Source: CDC")
h1b_count_region <- h1b %>%
group_by(region,YEAR) %>%
summarize(count = n()) %>%
mutate(count_range = ntile(count,20))
h1b_subregionmap <- h1b_count_region %>%
inner_join(map_data("state"),by = "region")
View(h1b_subregionmap)
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.2) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
h1b_count_region <- h1b %>%
filter(!YEAR == NA) %>%
group_by(region,YEAR) %>%
summarize(count = n()) %>%
mutate(count_range = ntile(count,20))
h1b_subregionmap <- h1b_count_region %>%
inner_join(map_data("state"),by = "region")
h1b_count_region <- h1b %>%
filter(!is.na(YEAR)) %>%
group_by(region,YEAR) %>%
summarize(count = n()) %>%
mutate(count_range = ntile(count,20))
h1b_subregionmap <- h1b_count_region %>%
inner_join(map_data("state"),by = "region")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.2) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.2) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.5) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 0.7, end = 0.5) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 0.9, end = 0.4) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_subregionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
View(h1b_subregionmap)
h1b_region <- h1b %>%
group_by(region,YEAR) %>%
summarize(count = n()) %>%
mutate(count_range = ntile(count,20))
h1b_region <- h1b %>%
group_by(region) %>%
summarize(count = n()) %>%
mutate(count_range = ntile(count,20))
h1b_region_year <- h1b %>%
filter(!is.na(YEAR)) %>%
group_by(region,YEAR) %>%
summarize(count = n())
h1b_regionmap <- h1b_region %>%
inner_join(map_data("state"),by = "region")
h1b_regionmap_year <- h1b_region_year %>%
inner_join(map_data("state"),by = "region")
ggplot(h1b_regionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
h1b_region <- h1b %>%
group_by(region) %>%
summarize(count = n()) %>%
mutate(count_range = ntile(count,20))
h1b_regionmap <- h1b_region %>%
inner_join(map_data("state"),by = "region")
ggplot(h1b_regionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
View(h1b_region)
View(h1b_regionmap)
ggplot(h1b_regionmap_year, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_regionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_regionmap_year, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_regionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
# Plot 2: The employers' h1b application quantity distribution on google map
h1b_count <- h1b  %>%
group_by(EMPLOYER_NAME) %>%
mutate(count = n()) %>%
select(EMPLOYER_NAME, count, lon, lat) %>%
filter(!is.na(lon) || !is.na(lat))
us.map <- get_map("US", zoom = 4, color='bw')
ggplot(h1b_regionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_colour_gradient(high = "red", low = 'blue') +
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_regionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
par(nfrow=c(3,2))
?par
par(mfrow=c(3,2))
ggplot(h1b_regionmap_year, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
facet_wrap(~YEAR)+
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
ggplot(h1b_regionmap, aes(long, lat, group = group)) +
geom_polygon(aes(fill = count_range)) +
scale_fill_viridis(discrete = F,name="H1b",option = "B",begin = 1, end = 0.3) +
theme_void() +labs(title = "H1b Visa Sponors in the US",
subtitle = "County Level Data, 2011-2016",
caption = "Source: Kaggle")
# Plot 5: top 10 employers in h1b application for Fulltime positions
h1b %>%
group_by(EMPLOYER_NAME) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
inner_join(h1b, by = "EMPLOYER_NAME") %>%
group_by(EMPLOYER_NAME, FULL_TIME_POSITION) %>%
summarise(count = n()) %>%
ggplot() +
geom_bar(aes(x = reorder(EMPLOYER_NAME, -count), y = count, fill = FULL_TIME_POSITION), stat = "identity") +
xlab("Top 10 Employers") + ylab("No. of H1B Applications") + theme(axis.text = element_text(size = 7))
h1b %>%
group_by(EMPLOYER_NAME) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
head(10) %>%
ggplot() +
geom_bar(aes(x = reorder(EMPLOYER_NAME, -count), y = count), stat = "identity") +
xlab("Top 10 Employers") + ylab("No. of H1B Applications") +
theme(axis.text = element_text(size = 7))
```{r eval =F}
install.packages("OIdata")
